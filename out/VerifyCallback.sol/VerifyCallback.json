{"abi":[{"type":"function","name":"afterAdd","inputs":[{"name":"adder_","type":"address","internalType":"address"},{"name":"evidences_","type":"tuple[]","internalType":"struct Evidence[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterApprove","inputs":[{"name":"approver_","type":"address","internalType":"address"},{"name":"evidences_","type":"tuple[]","internalType":"struct Evidence[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterBan","inputs":[{"name":"banner_","type":"address","internalType":"address"},{"name":"evidences_","type":"tuple[]","internalType":"struct Evidence[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterRemove","inputs":[{"name":"remover_","type":"address","internalType":"address"},{"name":"evidences_","type":"tuple[]","internalType":"struct Evidence[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506103848061001f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b1461009f5780638f6b114614610082578063ebae2d8c14610082578063f2fde38b146100cb57600080fd5b8063376dcbe214610082578063715018a61461009757806389bd6b2614610082575b600080fd5b6100956100903660046102dc565b6100de565b005b6100956100eb565b6033546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100956100d9366004610362565b6100ff565b6100e66101bb565b505050565b6100f36101bb565b6100fd600061023c565b565b6101076101bb565b73ffffffffffffffffffffffffffffffffffffffff81166101af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101b88161023c565b50565b60335473ffffffffffffffffffffffffffffffffffffffff1633146100fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a6565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803573ffffffffffffffffffffffffffffffffffffffff811681146102d757600080fd5b919050565b6000806000604084860312156102f157600080fd5b6102fa846102b3565b9250602084013567ffffffffffffffff8082111561031757600080fd5b818601915086601f83011261032b57600080fd5b81358181111561033a57600080fd5b8760208260051b850101111561034f57600080fd5b6020830194508093505050509250925092565b60006020828403121561037457600080fd5b61037d826102b3565b939250505056","sourceMap":"426:1048:43:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b1461009f5780638f6b114614610082578063ebae2d8c14610082578063f2fde38b146100cb57600080fd5b8063376dcbe214610082578063715018a61461009757806389bd6b2614610082575b600080fd5b6100956100903660046102dc565b6100de565b005b6100956100eb565b6033546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100956100d9366004610362565b6100ff565b6100e66101bb565b505050565b6100f36101bb565b6100fd600061023c565b565b6101076101bb565b73ffffffffffffffffffffffffffffffffffffffff81166101af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101b88161023c565b50565b60335473ffffffffffffffffffffffffffffffffffffffff1633146100fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a6565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803573ffffffffffffffffffffffffffffffffffffffff811681146102d757600080fd5b919050565b6000806000604084860312156102f157600080fd5b6102fa846102b3565b9250602084013567ffffffffffffffff8082111561031757600080fd5b818601915086601f83011261032b57600080fd5b81358181111561033a57600080fd5b8760208260051b850101111561034f57600080fd5b6020830194508093505050509250925092565b60006020828403121561037457600080fd5b61037d826102b3565b939250505056","sourceMap":"426:1048:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:222;;;;;;:::i;:::-;;:::i;:::-;;2085:101:2;;;:::i;1462:85::-;1534:6;;1462:85;;;1534:6;;;;1083:74:47;;1462:85:2;;;;;1071:2:47;1462:85:2;;;2335:198;;;;;;:::i;:::-;;:::i;802:222:43:-;1355:13:2;:11;:13::i;:::-;802:222:43;;;:::o;2085:101:2:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;2335:198::-;1355:13;:11;:13::i;:::-;2423:22:::1;::::0;::::1;2415:73;;;::::0;::::1;::::0;;1561:2:47;2415:73:2::1;::::0;::::1;1543:21:47::0;1600:2;1580:18;;;1573:30;1639:34;1619:18;;;1612:62;1710:8;1690:18;;;1683:36;1736:19;;2415:73:2::1;;;;;;;;;2498:28;2517:8;2498:18;:28::i;:::-;2335:198:::0;:::o;1620:130::-;1534:6;;1683:23;1534:6;965:10:5;1683:23:2;1675:68;;;;;;;1968:2:47;1675:68:2;;;1950:21:47;;;1987:18;;;1980:30;2046:34;2026:18;;;2019:62;2098:18;;1675:68:2;1766:356:47;2687:187:2;2779:6;;;;2795:17;;;;;;;;;;;2827:40;;2779:6;;;2795:17;2779:6;;2827:40;;2760:16;;2827:40;2750:124;2687:187;:::o;14:196:47:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:717::-;338:6;346;354;407:2;395:9;386:7;382:23;378:32;375:52;;;423:1;420;413:12;375:52;446:29;465:9;446:29;:::i;:::-;436:39;;526:2;515:9;511:18;498:32;549:18;590:2;582:6;579:14;576:34;;;606:1;603;596:12;576:34;644:6;633:9;629:22;619:32;;689:7;682:4;678:2;674:13;670:27;660:55;;711:1;708;701:12;660:55;751:2;738:16;777:2;769:6;766:14;763:34;;;793:1;790;783:12;763:34;846:7;841:2;831:6;828:1;824:14;820:2;816:23;812:32;809:45;806:65;;;867:1;864;857:12;806:65;898:2;894;890:11;880:21;;920:6;910:16;;;;;215:717;;;;;:::o;1168:186::-;1227:6;1280:2;1268:9;1259:7;1255:23;1251:32;1248:52;;;1296:1;1293;1286:12;1248:52;1319:29;1338:9;1319:29;:::i;:::-;1309:39;1168:186;-1:-1:-1;;;1168:186:47:o","linkReferences":{}},"methodIdentifiers":{"afterAdd(address,(address,bytes)[])":"89bd6b26","afterApprove(address,(address,bytes)[])":"376dcbe2","afterBan(address,(address,bytes)[])":"8f6b1146","afterRemove(address,(address,bytes)[])":"ebae2d8c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adder_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Evidence[]\",\"name\":\"evidences_\",\"type\":\"tuple[]\"}],\"name\":\"afterAdd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Evidence[]\",\"name\":\"evidences_\",\"type\":\"tuple[]\"}],\"name\":\"afterApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"banner_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Evidence[]\",\"name\":\"evidences_\",\"type\":\"tuple[]\"}],\"name\":\"afterBan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"remover_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Evidence[]\",\"name\":\"evidences_\",\"type\":\"tuple[]\"}],\"name\":\"afterRemove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"afterAdd(address,(address,bytes)[])\":{\"params\":{\"adder_\":\"The `msg.sender` that authorized the additions. MAY be the addee without any specific role.\",\"evidences_\":\"All evidences associated with the additions.\"}},\"afterApprove(address,(address,bytes)[])\":{\"params\":{\"approver_\":\"The `msg.sender` that authorized the approvals.\",\"evidences_\":\"All evidences associated with the approvals.\"}},\"afterBan(address,(address,bytes)[])\":{\"params\":{\"banner_\":\"The `msg.sender` that authorized the bannings.\",\"evidences_\":\"All evidences associated with the bannings.\"}},\"afterRemove(address,(address,bytes)[])\":{\"params\":{\"evidences_\":\"All evidences associated with the removals.\",\"remover_\":\"The `msg.sender` that authorized the removals.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"VerifyCallback Implements empty virtual functions for every function in `IVerifyCallbackV1` so that inheriting contracts only have to override the callbacks they need to define logic for.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAdd(address,(address,bytes)[])\":{\"notice\":\"Additional processing after a batch of additions. SHOULD revert/rollback transactions if processing fails.\"},\"afterApprove(address,(address,bytes)[])\":{\"notice\":\"Additional processing after a batch of approvals. SHOULD revert/rollback transactions if processing fails.\"},\"afterBan(address,(address,bytes)[])\":{\"notice\":\"Additional processing after a batch of bannings. SHOULD revert/rollback transactions if processing fails.\"},\"afterRemove(address,(address,bytes)[])\":{\"notice\":\"Additional processing after a batch of removals. SHOULD revert/rollback transactions if processing fails.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VerifyCallback.sol\":\"VerifyCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":bytecode/=lib/rain.interpreter.interface/src/lib/bytecode/\",\":caller/=lib/rain.interpreter.interface/src/lib/caller/\",\":codegen/=lib/rain.interpreter.interface/src/lib/codegen/\",\":deprecated/=lib/rain.interpreter.interface/src/lib/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":mut/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.string/src/lib/mut/\",\":ns/=lib/rain.interpreter.interface/src/lib/ns/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/rain.interpreter.interface/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":parse/=lib/rain.interpreter.interface/src/lib/parse/\",\":rain.datacontract/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.datacontract/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/src/\",\":rain.interpreter.interface/=lib/rain.interpreter.interface/src/\",\":rain.intorastring/=lib/rain.interpreter.interface/lib/rain.intorastring/src/\",\":rain.lib.hash/=lib/rain.interpreter.interface/lib/rain.lib.hash/src/\",\":rain.lib.typecast/=lib/rain.interpreter.interface/lib/rain.lib.typecast/src/\",\":rain.math.binary/=lib/rain.interpreter.interface/lib/rain.math.binary/src/\",\":rain.math.fixedpoint/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/src/\",\":rain.math.float/=lib/rain.interpreter.interface/lib/rain.math.float/\",\":rain.math.saturating/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.sol.codegen/=lib/rain.interpreter.interface/lib/rain.sol.codegen/\",\":rain.solmem/=lib/rain.solmem/src/\",\":rain.string/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.string/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"src/IVerifyCallbackV1.sol\":{\"keccak256\":\"0x6ddcfbfaa0c5c7550c28926b8f1a19132fabe55314e4ae553098eae276ab15c7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://63185f4282f38b8e5878380958a5ddc0a94926106883e9d5634ea74112156d44\",\"dweb:/ipfs/QmbrpPPDTvM7ds8qeeB3mxr8h6igHG6UGkEtWnSLzPPNNg\"]},\"src/LibEvidence.sol\":{\"keccak256\":\"0x97eea3ead2dac233f74c91b7c4c5ec28bb88a9a1c027c28c4646bea7d43eadc6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://65c0d226c4362fc7c13e97b8a5158a31314313ffae3a7249e1c90d5219053f5f\",\"dweb:/ipfs/QmbJhzPAVP1rmxDFja6gf3ok3y8VjBATux8g5W1EckNoBR\"]},\"src/VerifyCallback.sol\":{\"keccak256\":\"0xeb5fc66a92cf0eed61682bd9488649d0205fdd382044bf5f4b592d629682cfd2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fa35c131fe3e0d3a214177c6bee5f3ce4794febae6bad15f86dc05d13c13e274\",\"dweb:/ipfs/QmSX5avre9LFtn2dASUjeUKfPLVRjcUxdnX7VkhF6vjueJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"adder_","type":"address"},{"internalType":"struct Evidence[]","name":"evidences_","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"afterAdd"},{"inputs":[{"internalType":"address","name":"approver_","type":"address"},{"internalType":"struct Evidence[]","name":"evidences_","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"afterApprove"},{"inputs":[{"internalType":"address","name":"banner_","type":"address"},{"internalType":"struct Evidence[]","name":"evidences_","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"afterBan"},{"inputs":[{"internalType":"address","name":"remover_","type":"address"},{"internalType":"struct Evidence[]","name":"evidences_","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"afterRemove"},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"afterAdd(address,(address,bytes)[])":{"params":{"adder_":"The `msg.sender` that authorized the additions. MAY be the addee without any specific role.","evidences_":"All evidences associated with the additions."}},"afterApprove(address,(address,bytes)[])":{"params":{"approver_":"The `msg.sender` that authorized the approvals.","evidences_":"All evidences associated with the approvals."}},"afterBan(address,(address,bytes)[])":{"params":{"banner_":"The `msg.sender` that authorized the bannings.","evidences_":"All evidences associated with the bannings."}},"afterRemove(address,(address,bytes)[])":{"params":{"evidences_":"All evidences associated with the removals.","remover_":"The `msg.sender` that authorized the removals."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"afterAdd(address,(address,bytes)[])":{"notice":"Additional processing after a batch of additions. SHOULD revert/rollback transactions if processing fails."},"afterApprove(address,(address,bytes)[])":{"notice":"Additional processing after a batch of approvals. SHOULD revert/rollback transactions if processing fails."},"afterBan(address,(address,bytes)[])":{"notice":"Additional processing after a batch of bannings. SHOULD revert/rollback transactions if processing fails."},"afterRemove(address,(address,bytes)[])":{"notice":"Additional processing after a batch of removals. SHOULD revert/rollback transactions if processing fails."}},"version":1}},"settings":{"remappings":["bytecode/=lib/rain.interpreter.interface/src/lib/bytecode/","caller/=lib/rain.interpreter.interface/src/lib/caller/","codegen/=lib/rain.interpreter.interface/src/lib/codegen/","deprecated/=lib/rain.interpreter.interface/src/lib/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","mut/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.string/src/lib/mut/","ns/=lib/rain.interpreter.interface/src/lib/ns/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/rain.interpreter.interface/lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","parse/=lib/rain.interpreter.interface/src/lib/parse/","rain.datacontract/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.datacontract/src/","rain.extrospection/=lib/rain.factory/lib/rain.extrospection/","rain.factory/=lib/rain.factory/src/","rain.interpreter.interface/=lib/rain.interpreter.interface/src/","rain.intorastring/=lib/rain.interpreter.interface/lib/rain.intorastring/src/","rain.lib.hash/=lib/rain.interpreter.interface/lib/rain.lib.hash/src/","rain.lib.typecast/=lib/rain.interpreter.interface/lib/rain.lib.typecast/src/","rain.math.binary/=lib/rain.interpreter.interface/lib/rain.math.binary/src/","rain.math.fixedpoint/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/src/","rain.math.float/=lib/rain.interpreter.interface/lib/rain.math.float/","rain.math.saturating/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/","rain.sol.codegen/=lib/rain.interpreter.interface/lib/rain.sol.codegen/","rain.solmem/=lib/rain.solmem/src/","rain.string/=lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.string/src/"],"optimizer":{"enabled":true,"runs":100000},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/VerifyCallback.sol":"VerifyCallback"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e","urls":["bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c","dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef","urls":["bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95","dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx"],"license":"MIT"},"src/IVerifyCallbackV1.sol":{"keccak256":"0x6ddcfbfaa0c5c7550c28926b8f1a19132fabe55314e4ae553098eae276ab15c7","urls":["bzz-raw://63185f4282f38b8e5878380958a5ddc0a94926106883e9d5634ea74112156d44","dweb:/ipfs/QmbrpPPDTvM7ds8qeeB3mxr8h6igHG6UGkEtWnSLzPPNNg"],"license":"CAL"},"src/LibEvidence.sol":{"keccak256":"0x97eea3ead2dac233f74c91b7c4c5ec28bb88a9a1c027c28c4646bea7d43eadc6","urls":["bzz-raw://65c0d226c4362fc7c13e97b8a5158a31314313ffae3a7249e1c90d5219053f5f","dweb:/ipfs/QmbJhzPAVP1rmxDFja6gf3ok3y8VjBATux8g5W1EckNoBR"],"license":"CAL"},"src/VerifyCallback.sol":{"keccak256":"0xeb5fc66a92cf0eed61682bd9488649d0205fdd382044bf5f4b592d629682cfd2","urls":["bzz-raw://fa35c131fe3e0d3a214177c6bee5f3ce4794febae6bad15f86dc05d13c13e274","dweb:/ipfs/QmSX5avre9LFtn2dASUjeUKfPLVRjcUxdnX7VkhF6vjueJ"],"license":"CAL"}},"version":1},"id":43}